/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const DocsIndexLazyImport = createFileRoute('/docs/')()
const ConvertPdfLazyImport = createFileRoute('/convert/pdf')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DocsIndexLazyRoute = DocsIndexLazyImport.update({
  path: '/docs/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/docs/index.lazy').then((d) => d.Route))

const ConvertPdfLazyRoute = ConvertPdfLazyImport.update({
  path: '/convert/pdf',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/convert/pdf.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/convert/pdf': {
      id: '/convert/pdf'
      path: '/convert/pdf'
      fullPath: '/convert/pdf'
      preLoaderRoute: typeof ConvertPdfLazyImport
      parentRoute: typeof rootRoute
    }
    '/docs/': {
      id: '/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  ConvertPdfLazyRoute,
  DocsIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/convert/pdf",
        "/docs/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/convert/pdf": {
      "filePath": "convert/pdf.lazy.tsx"
    },
    "/docs/": {
      "filePath": "docs/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
